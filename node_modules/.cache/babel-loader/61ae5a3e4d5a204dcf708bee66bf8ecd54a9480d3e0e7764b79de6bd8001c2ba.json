{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\todo\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  index,\n  task,\n  editTask,\n  deleteTask\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTask, setUpdatedTask] = useState(task);\n  const handleEdit = () => {\n    if (updatedTask.trim() !== '') {\n      editTask(index, updatedTask);\n      setIsEditing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTask,\n        onChange: e => setUpdatedTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"7LLR2W+qcAsPuDwVJ+3MVeXhk2I=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","index","task","editTask","deleteTask","_s","isEditing","setIsEditing","updatedTask","setUpdatedTask","handleEdit","trim","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/divya/todo/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskItem = ({ index, task, editTask, deleteTask }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [updatedTask, setUpdatedTask] = useState(task);\r\n\r\n  const handleEdit = () => {\r\n    if (updatedTask.trim() !== '') {\r\n      editTask(index, updatedTask);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedTask}\r\n            onChange={(e) => setUpdatedTask(e.target.value)}\r\n          />\r\n          <button onClick={handleEdit}>Save</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span>{task}</span>\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          <button onClick={() => deleteTask(index)}>Delete</button>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACO,IAAI,CAAC;EAEpD,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,WAAW,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7BR,QAAQ,CAACF,KAAK,EAAEO,WAAW,CAAC;MAC5BD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAe,QAAA,EACGN,SAAS,gBACRT,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QACEgB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEN,WAAY;QACnBO,QAAQ,EAAGC,CAAC,IAAKP,cAAc,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFxB,OAAA;QAAQyB,OAAO,EAAEZ,UAAW;QAAAE,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC1C,CAAC,gBAEHxB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAOV;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBxB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAAC,IAAI,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDxB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACH,KAAK,CAAE;QAAAW,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACzD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAAChB,EAAA,CA/BIL,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}