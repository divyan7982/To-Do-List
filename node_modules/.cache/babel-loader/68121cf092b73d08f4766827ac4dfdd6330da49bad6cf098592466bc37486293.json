{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\todo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Load tasks from JSON file\n  useEffect(() => {\n    fetch('/tasks.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setTasks(data)).catch(error => console.error('Fetch error:', error));\n  }, []);\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: tasks.length + 1,\n        // Simple ID generation\n        task: newTask,\n        completed: false\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n    }\n  };\n  const deleteTask = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  const editTask = (index, updatedTask) => {\n    const updatedTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      task: updatedTask\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const toggleComplete = index => {\n    const updatedTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const filteredTasks = tasks.filter(task => task.task.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search tasks\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      editTask: editTask,\n      deleteTask: deleteTask,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vAW6FDZxVankStKAcBNo3ZEGLeM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","searchQuery","setSearchQuery","fetch","then","response","ok","Error","json","data","catch","error","console","addTask","trim","newTaskObj","id","length","task","completed","deleteTask","index","updatedTasks","filter","_","i","editTask","updatedTask","map","toggleComplete","filteredTasks","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/divya/todo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Load tasks from JSON file\n  useEffect(() => {\n    fetch('/tasks.json')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => setTasks(data))\n      .catch((error) => console.error('Fetch error:', error));\n  }, []);\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: tasks.length + 1, // Simple ID generation\n        task: newTask,\n        completed: false\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n    }\n  };\n\n  const deleteTask = (index) => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n\n  const editTask = (index, updatedTask) => {\n    const updatedTasks = tasks.map((task, i) =>\n      i === index ? { ...task, task: updatedTask } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  const toggleComplete = (index) => {\n    const updatedTasks = tasks.map((task, i) =>\n      i === index ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  const filteredTasks = tasks.filter((task) =>\n    task.task.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>To-Do List</h1>\n      <div className=\"task-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button onClick={addTask}>Add</button>\n      </div>\n      <div className=\"task-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search tasks\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n      </div>\n      <TaskList\n        tasks={filteredTasks}\n        editTask={editTask}\n        deleteTask={deleteTask}\n        toggleComplete={toggleComplete}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}