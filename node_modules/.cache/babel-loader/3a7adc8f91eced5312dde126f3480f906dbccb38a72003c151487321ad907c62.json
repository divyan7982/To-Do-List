{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\todo\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  index,\n  task,\n  editTask,\n  deleteTask,\n  toggleComplete\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTask, setUpdatedTask] = useState(task.task);\n  const [isCompleted, setIsCompleted] = useState(task.completed);\n  const handleEdit = () => {\n    if (updatedTask.trim() !== '') {\n      editTask(index, updatedTask);\n      setIsEditing(false);\n    }\n  };\n  const handleComplete = () => {\n    toggleComplete(index);\n    setIsCompleted(!isCompleted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      textDecoration: isCompleted ? 'line-through' : 'none'\n    },\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTask,\n        onChange: e => setUpdatedTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleComplete,\n        children: isCompleted ? 'Undo' : 'Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"9rBpV1qSi+XpzhUqN2Tfirp0CJ8=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","index","task","editTask","deleteTask","toggleComplete","_s","isEditing","setIsEditing","updatedTask","setUpdatedTask","isCompleted","setIsCompleted","completed","handleEdit","trim","handleComplete","style","textDecoration","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/divya/todo/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskItem = ({ index, task, editTask, deleteTask, toggleComplete }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [updatedTask, setUpdatedTask] = useState(task.task);\r\n  const [isCompleted, setIsCompleted] = useState(task.completed);\r\n\r\n  const handleEdit = () => {\r\n    if (updatedTask.trim() !== '') {\r\n      editTask(index, updatedTask);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    toggleComplete(index);\r\n    setIsCompleted(!isCompleted);\r\n  };\r\n\r\n  return (\r\n    <li style={{ textDecoration: isCompleted ? 'line-through' : 'none' }}>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedTask}\r\n            onChange={(e) => setUpdatedTask(e.target.value)}\r\n          />\r\n          <button onClick={handleEdit}>Save</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span>{task.task}</span> {/* Ensure you are rendering task.task */}\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          <button onClick={() => deleteTask(index)}>Delete</button>\r\n          <button onClick={handleComplete}>\r\n            {isCompleted ? 'Undo' : 'Done'}\r\n          </button>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACO,IAAI,CAACA,IAAI,CAAC;EACzD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAACO,IAAI,CAACW,SAAS,CAAC;EAE9D,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,WAAW,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7BZ,QAAQ,CAACF,KAAK,EAAEQ,WAAW,CAAC;MAC5BD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3BX,cAAc,CAACJ,KAAK,CAAC;IACrBW,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEd,OAAA;IAAIoB,KAAK,EAAE;MAAEC,cAAc,EAAEP,WAAW,GAAG,cAAc,GAAG;IAAO,CAAE;IAAAQ,QAAA,EAClEZ,SAAS,gBACRV,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEZ,WAAY;QACnBa,QAAQ,EAAGC,CAAC,IAAKb,cAAc,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF/B,OAAA;QAAQgC,OAAO,EAAEf,UAAW;QAAAK,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC1C,CAAC,gBAEH/B,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAOjB,IAAI,CAACA;MAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KAAC,eACzB/B,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAAC,IAAI,CAAE;QAAAW,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxD/B,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMzB,UAAU,CAACH,KAAK,CAAE;QAAAkB,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzD/B,OAAA;QAAQgC,OAAO,EAAEb,cAAe;QAAAG,QAAA,EAC7BR,WAAW,GAAG,MAAM,GAAG;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA,eACT;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACtB,EAAA,CAxCIN,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}